var searchIndex = JSON.parse('{\
"extendr_api":{"doc":"extendr - A safe and user friendly R extension interface.","i":[[23,"extendr","extendr_api","Generate bindings for a single function.",null,null],[14,"extendr_module","","Define a module and export symbols to R Example:",null,null],[6,"DllInfo","","",null,null],[6,"SEXP","","",null,null],[3,"VecIter","","",null,null],[3,"ListIter","","",null,null],[3,"StrIter","","",null,null],[3,"Symbol","","Wrapper for creating symbols.",null,null],[12,"0","","",0,null],[3,"Character","","Wrapper for creating character objects.",null,null],[12,"0","","",1,null],[3,"Lang","","Wrapper for creating language objects.",null,null],[12,"0","","",2,null],[3,"List","","Wrapper for creating list objects.",null,null],[12,"0","","",3,null],[3,"CallMethod","","",null,null],[12,"call_symbol","","",4,null],[12,"func_ptr","","",4,null],[12,"num_args","","",4,null],[4,"Robj","","Wrapper for an R S-expression pointer (SEXP).",null,null],[13,"Owned","","This object owns the SEXP and must free it.",5,null],[13,"Borrowed","","This object references a SEXP such as an input parameter.",5,null],[13,"Sys","","This object references a SEXP owned by libR.",5,null],[5,"append_with_name","","",null,[[["sexp",6],["robj",4]],["sexp",6]]],[5,"append","","",null,[[["sexp",6],["robj",4]],["sexp",6]]],[5,"make_lang","","",null,[[],["robj",4]]],[5,"unwrap_or_throw","","Throw an R error if a result is an error.",null,[[["result",4]]]],[5,"new_owned","","",null,[[["sexp",6]],["robj",4]]],[5,"new_borrowed","","",null,[[["sexp",6]],["robj",4]]],[5,"new_sys","","",null,[[["sexp",6]],["robj",4]]],[5,"register_call_methods","","",null,[[]]],[5,"handle_panic","","This function is use by the wrapper logic to catch panics…",null,[[],["sexp",6]]],[5,"integer_is_na","","",null,[[]]],[5,"numeric_is_na","","",null,[[]]],[5,"print_r_output","","",null,[[["vec",3],["into",8]]]],[5,"print_r_error","","",null,[[["vec",3],["into",8]]]],[11,"get","","Get a copy of the underlying SEXP. Note: this is unsafe.",5,[[],["sexp",6]]],[11,"get_mut","","Get a copy of the underlying SEXP for mutable types. This…",5,[[],[["sexp",6],["option",4]]]],[11,"sexptype","","Get the XXXSXP type of the object.",5,[[]]],[11,"len","","Get the extended length of the object.",5,[[]]],[11,"is_na","","Is this object is an NA? Works for character, integer and…",5,[[]]],[11,"as_i32_slice","","Get a read-only reference to the content of an integer or…",5,[[],["option",4]]],[11,"as_integer_slice","","Get a read-only reference to the content of an integer…",5,[[],["option",4]]],[11,"integer_iter","","Get an iterator over integer elements of this slice.",5,[[],[["integeriter",6],["option",4]]]],[11,"as_integer_vector","","Get a Vec copied from the object.",5,[[],[["vec",3],["option",4]]]],[11,"as_logical_slice","","Get a read-only reference to the content of an integer or…",5,[[],["option",4]]],[11,"as_logical_vector","","Get a Vec copied from the object.",5,[[],[["option",4],["vec",3]]]],[11,"logical_iter","","Get an iterator over logical elements of this slice.",5,[[],[["option",4],["logicaliter",6]]]],[11,"as_f64_slice","","Get a read-only reference to the content of a double vector.",5,[[],["option",4]]],[11,"as_numeric_slice","","Get a read-only reference to the content of a double vector.",5,[[],["option",4]]],[11,"numeric_iter","","Get an iterator over numeric elements of this slice.",5,[[],[["numericiter",6],["option",4]]]],[11,"as_numeric_vector","","Get a Vec copied from the object.",5,[[],[["option",4],["vec",3]]]],[11,"as_u8_slice","","Get a read-only reference to the content of an integer or…",5,[[],["option",4]]],[11,"as_raw_slice","","Get a read-only reference to the content of an integer or…",5,[[],["option",4]]],[11,"as_i32_slice_mut","","Get a read-write reference to the content of an integer or…",5,[[],["option",4]]],[11,"as_f64_slice_mut","","Get a read-write reference to the content of a double…",5,[[],["option",4]]],[11,"as_u8_slice_mut","","Get a read-write reference to the content of an integer or…",5,[[],["option",4]]],[11,"pairlist_iter","","Get an iterator over a pairlist.",5,[[],[["listiter",3],["option",4]]]],[11,"list_iter","","Get an iterator over an unnamed list.",5,[[],[["option",4],["veciter",3]]]],[11,"str_iter","","Get an iterator over a string vector. Returns None if the…",5,[[],[["striter",3],["option",4]]]],[11,"as_string_vector","","Get a vector of owned strings. Owned strings have long…",5,[[],[["vec",3],["option",4]]]],[11,"as_str_vector","","Get a vector of string references. String references…",5,[[],[["vec",3],["option",4]]]],[11,"as_str","","Get a read-only reference to a char, symbol or string type.",5,[[],["option",4]]],[11,"as_i32","","Get a scalar integer.",5,[[],["option",4]]],[11,"as_integer","","Get a scalar integer.",5,[[],["option",4]]],[11,"as_f64","","Get a scalar real.",5,[[],["option",4]]],[11,"as_numeric","","Get a scalar real.",5,[[],["option",4]]],[11,"as_bool","","Get a scalar boolean.",5,[[],["option",4]]],[11,"as_logical","","Get a scalar boolean.",5,[[],["option",4]]],[11,"eval","","Evaluate the expression and return an error or an R object.",5,[[],[["anyerror",6],["result",4],["robj",4]]]],[11,"eval_blind","","Evaluate the expression and return NULL or an R object.",5,[[],["robj",4]]],[11,"parse","","Parse a string into an R executable object",5,[[],[["anyerror",6],["result",4],["robj",4]]]],[11,"eval_string","","Parse a string into an R executable object and run it.",5,[[],[["anyerror",6],["result",4],["robj",4]]]],[11,"unprotected","","Unprotect an object - assumes a transfer of ownership.…",5,[[],["robj",4]]],[11,"is_owned","","Return true if the object is owned by this wrapper. If so,…",5,[[]]],[11,"to_owned","","",5,[[],["robj",4]]],[11,"names","","Get the names attribute as a string iterator if one exists.",5,[[],[["striter",3],["option",4]]]],[11,"named_list_iter","","Return an iterator over names and values of a list if they…",5,[[],[["zip",3],["option",4]]]],[11,"class","","Get the class attribute as a string iterator if one exists.",5,[[],[["striter",3],["option",4]]]],[11,"inherits","","Return true if this class inherits this class.",5,[[]]],[11,"levels","","Get the levels attribute as a string iterator if one exists.",5,[[],[["striter",3],["option",4]]]],[11,"globalEnv","","The \\\"global\\\" environment",5,[[],["robj",4]]],[11,"emptyEnv","","An empty environment at the root of the environment tree",5,[[],["robj",4]]],[11,"baseEnv","","The base environment; formerly R_NilValue",5,[[],["robj",4]]],[11,"baseNamespace","","The (fake) namespace for base",5,[[],["robj",4]]],[11,"namespaceRegistry","","for registered namespaces",5,[[],["robj",4]]],[11,"srcref","","Current srcref, for debuggers",5,[[],["robj",4]]],[11,"nilValue","","The nil object",5,[[],["robj",4]]],[11,"unboundValue","","Unbound marker",5,[[],["robj",4]]],[11,"missingArg","","Missing argument marker",5,[[],["robj",4]]],[11,"baseSymbol","","\\\"base\\\"",5,[[],["robj",4]]],[11,"braceSymbol","","\\\"{\\\"",5,[[],["robj",4]]],[11,"bracket2Symbol","","\\\"[[\\\"",5,[[],["robj",4]]],[11,"bracketSymbol","","\\\"[\\\"",5,[[],["robj",4]]],[11,"classSymbol","","\\\"class\\\"",5,[[],["robj",4]]],[11,"deviceSymbol","","\\\".Device\\\"",5,[[],["robj",4]]],[11,"dimNamesSymbol","","\\\"dimnames\\\"",5,[[],["robj",4]]],[11,"dimSymbol","","\\\"dim\\\"",5,[[],["robj",4]]],[11,"dollarSymbol","","\\\"$\\\"",5,[[],["robj",4]]],[11,"dotsSymbol","","\\\"...\\\"",5,[[],["robj",4]]],[11,"doubleColonSymbol","","pub fn dropSymbol() -> Robj { unsafe {…",5,[[],["robj",4]]],[11,"lastvalueSymbol","","\\\".Last.value\\\"",5,[[],["robj",4]]],[11,"levelsSymbol","","\\\"levels\\\"",5,[[],["robj",4]]],[11,"modeSymbol","","\\\"mode\\\"",5,[[],["robj",4]]],[11,"naRmSymbol","","\\\"na.rm\\\"",5,[[],["robj",4]]],[11,"nameSymbol","","\\\"name\\\"",5,[[],["robj",4]]],[11,"namesSymbol","","\\\"names\\\"",5,[[],["robj",4]]],[11,"namespaceEnvSymbol","","NAMESPACE_.\\\"",5,[[],["robj",4]]],[11,"packageSymbol","","\\\"package\\\"",5,[[],["robj",4]]],[11,"previousSymbol","","\\\"previous\\\"",5,[[],["robj",4]]],[11,"quoteSymbol","","\\\"quote\\\"",5,[[],["robj",4]]],[11,"rowNamesSymbol","","\\\"row.names\\\"",5,[[],["robj",4]]],[11,"seedsSymbol","","\\\".Random.seed\\\"",5,[[],["robj",4]]],[11,"sortListSymbol","","\\\"sort.list\\\"",5,[[],["robj",4]]],[11,"sourceSymbol","","\\\"source\\\"",5,[[],["robj",4]]],[11,"specSymbol","","\\\"spec\\\"",5,[[],["robj",4]]],[11,"tspSymbol","","\\\"tsp\\\"",5,[[],["robj",4]]],[11,"tripleColonSymbol","","\\\":::\\\"",5,[[],["robj",4]]],[11,"dot_defined","","\\\".defined\\\"",5,[[],["robj",4]]],[11,"dot_Method","","\\\".Method\\\"",5,[[],["robj",4]]],[11,"dot_packageName","","\\\"packageName\\\"",5,[[],["robj",4]]],[11,"dot_target","","\\\".target\\\"",5,[[],["robj",4]]],[11,"naString","","NA_STRING as a CHARSXP",5,[[],["robj",4]]],[11,"blankString","","\\\"\\\" as a CHARSXP",5,[[],["robj",4]]],[11,"blankScalarString","","as a STRSXP",5,[[],["robj",4]]],[11,"isNull","","Return true if this is the null object.",5,[[]]],[11,"isSymbol","","Return true if this is a symbol.",5,[[]]],[11,"isLogical","","Return true if this is a boolean (logical) vector",5,[[]]],[11,"isReal","","Return true if this is a real (f64) vector.",5,[[]]],[11,"isComplex","","Return true if this is a complex vector.",5,[[]]],[11,"isExpression","","Return true if this is an expression.",5,[[]]],[11,"isEnvironment","","Return true if this is an environment.",5,[[]]],[11,"isString","","Return true if this is a string.",5,[[]]],[11,"isObject","","Return true if this is an object.",5,[[]]],[11,"getCurrentSrcref","","Get the source ref.",5,[[],["robj",4]]],[11,"getSrcFilename","","Get the source filename.",5,[[],["robj",4]]],[11,"asChar","","Convert to a string vector.",5,[[],["robj",4]]],[11,"coerceVector","","Convert to vectors of many kinds.",5,[[],["robj",4]]],[11,"pairToVectorList","","Convert a pairlist (LISTSXP) to a vector list (VECSXP).",5,[[],["robj",4]]],[11,"vectorToPairList","","Convert a vector list (VECSXP) to a pair list (LISTSXP)",5,[[],["robj",4]]],[11,"asCharacterFactor","","Convert a factor to a string vector.",5,[[],["robj",4]]],[11,"asLogical","","Get a scalar boolean value",5,[[]]],[11,"asInteger","","Get a scalar 32 bit integer value",5,[[]]],[11,"asReal","","Get a 64 bit double value",5,[[]]],[11,"allocMatrix","","Allocate a matrix object (see NumericMatrix etc.)",5,[[["sexptype",6]],["robj",4]]],[11,"duplicate","","Compatible way to duplicate an object. Use obj.clone()…",5,[[]]],[11,"getAttrib","","Get a specific attribute as a borrowed robj. Return…",5,[[["robj",4]],["robj",4]]],[11,"ncols","","Number of columns of a matrix",5,[[]]],[11,"nrows","","Number of rows of a matrix",5,[[]]],[11,"makeExternalPtr","","Internal function used to implement #[extendr] impl",5,[[["robj",4]]]],[11,"externalPtrAddr","","Internal function used to implement #[extendr] impl",5,[[]]],[11,"externalPtrTag","","Internal function used to implement #[extendr] impl",5,[[]]],[11,"externalPtrProtected","","Internal function used to implement #[extendr] impl",5,[[]]],[11,"registerCFinalizer","","",5,[[["r_cfinalizer_t",6]]]],[11,"xlengthgets","","Read-only access to attribute list. Copy a vector and…",5,[[],[["anyerror",6],["result",4],["robj",4]]]],[11,"allocVector","","Allocated an owned object of a certain type.",5,[[],["robj",4]]],[11,"conformable","","Return true if two arrays have identical dims.",5,[[["robj",4]]]],[11,"elt","","Borrow an element from a list.",5,[[],["robj",4]]],[11,"isArray","","Return true if this is an array.",5,[[]]],[11,"isFactor","","Return true if this is factor.",5,[[]]],[11,"isFrame","","Return true if this is a data frame.",5,[[]]],[11,"isFunction","","Return true if this is a function.",5,[[]]],[11,"isInteger","","Return true if this is an integer vector.",5,[[]]],[11,"isLanguage","","Return true if this is a language object.",5,[[]]],[11,"isList","","Return true if this is a vector list.",5,[[]]],[11,"isMatrix","","Return true if this is a matrix.",5,[[]]],[11,"isNewList","","Return true if this is a vector list or null.",5,[[]]],[11,"isNumber","","Return true if this is a numeric vector but not a factor.",5,[[]]],[11,"isNumeric","","Return true if this is a numeric vector but not a factor…",5,[[]]],[11,"isPairList","","Return true if this is a pairlist.",5,[[]]],[11,"isPrimitive","","Return true if this is a primitive function.",5,[[]]],[11,"isTs","","Return true if this is a time series vector (see tsp).",5,[[]]],[11,"isUserBinop","","Return true if this is a user defined binop.",5,[[]]],[11,"isValidString","","Return true if this is a valid string.",5,[[]]],[11,"isValidStringF","","Return true if this is a valid string.",5,[[]]],[11,"isVector","","Return true if this is a vector.",5,[[]]],[11,"isVectorAtomic","","Return true if this is an atomic vector.",5,[[]]],[11,"isVectorList","","Return true if this is a vector list.",5,[[]]],[11,"isVectorizable","","Return true if this is can be made into a vector.",5,[[]]],[11,"check_external_ptr","","Check an external pointer tag This may work better by…",5,[[]]],[11,"new","","Make an empty list iterator.",6,[[]]],[11,"new","","Make an empty str iterator.",7,[[]]],[6,"IntegerIter","","Iterator over the objects in a vector or string.",null,null],[6,"NumericIter","","",null,null],[6,"LogicalIter","","",null,null],[6,"AnyError","","Generic dynamic error type.",null,null],[17,"TRUE","","",null,null],[17,"FALSE","","",null,null],[17,"NULL","","",null,null],[8,"FromRobj","","Trait used for incomming parameter conversion.",null,null],[11,"from_robj","","",8,[[["robj",4]],["result",4]]],[8,"AsTypedSlice","","",null,null],[11,"as_typed_slice","","",9,[[],["option",4]]],[11,"as_typed_slice_mut","","",9,[[],["option",4]]],[8,"ToVectorValue","","`ToVectorValue` is a trait that allows many different…",null,null],[11,"sexptype","","",10,[[],["sexptype",6]]],[11,"to_numeric","","",10,[[]]],[11,"to_integer","","",10,[[]]],[11,"to_logical","","",10,[[]]],[11,"to_raw","","",10,[[]]],[11,"to_sexp","","",10,[[],["sexp",6]]],[8,"RobjItertools","","",null,null],[11,"collect_robj","","Convert a wide range of iterators to Robj.",11,[[],["robj",4]]],[14,"push_args","","Convert a list of tokens to an array of tuples.",null,null],[14,"args","","",null,null],[14,"append_lang","","Convert a list of tokens to an array of tuples.",null,null],[14,"lang","","A macro for constructing R langage objects.",null,null],[14,"r","","R object encapsulation operator.",null,null],[14,"c","","Concatenation operator.",null,null],[14,"rep","","Create a vector with repeating elements.",null,null],[14,"read_table","","Read a CSV file.",null,null],[14,"list","","Create a list.",null,null],[14,"data_frame","","Create a dataframe.",null,null],[14,"factor","","Create a factor.",null,null],[14,"rprint","","Print via the R output stream.",null,null],[14,"rprintln","","Print with a newline via the R output stream.",null,null],[14,"reprint","","Print via the R error stream.",null,null],[14,"reprintln","","Print with a newline via the R output stream.",null,null],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"into_iter","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from_robj","","",7,[[["robj",4]],["result",4]]],[11,"from_robj","","",12,[[["robj",4]],["result",4]]],[11,"from_robj","","",13,[[["robj",4]],["result",4]]],[11,"from_robj","","",14,[[["robj",4]],["result",4]]],[11,"from_robj","","",15,[[["robj",4]],["result",4]]],[11,"from_robj","","",5,[[["robj",4]],["result",4]]],[11,"as_typed_slice","","",5,[[],["option",4]]],[11,"as_typed_slice_mut","","",5,[[],["option",4]]],[11,"as_typed_slice","","",5,[[],["option",4]]],[11,"as_typed_slice_mut","","",5,[[],["option",4]]],[11,"as_typed_slice","","",5,[[],["option",4]]],[11,"as_typed_slice_mut","","",5,[[],["option",4]]],[11,"drop","","",5,[[]]],[11,"from","","",5,[[["sexp",6]]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[["character",3]]]],[11,"from","","",5,[[["lang",3]]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[["vec",3]]]],[11,"from","","",5,[[["list",3]]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[["symbol",3]]]],[11,"size_hint","","",12,[[]]],[11,"next","","",12,[[],["option",4]]],[11,"nth","","",12,[[],["option",4]]],[11,"next","","",6,[[],["option",4]]],[11,"size_hint","","",7,[[]]],[11,"next","","",7,[[],["option",4]]],[11,"nth","","",7,[[],["option",4]]],[11,"clone","","",5,[[]]],[11,"clone","","",12,[[],["veciter",3]]],[11,"clone","","",6,[[],["listiter",3]]],[11,"clone","","",7,[[],["striter",3]]],[11,"default","","",5,[[]]],[11,"eq","","",5,[[]]],[11,"eq","","",5,[[]]],[11,"eq","","",5,[[]]],[11,"eq","","",5,[[["robj",4]]]],[11,"eq","","",0,[[["symbol",3]]]],[11,"ne","","",0,[[["symbol",3]]]],[11,"eq","","",1,[[["character",3]]]],[11,"ne","","",1,[[["character",3]]]],[11,"eq","","",2,[[["lang",3]]]],[11,"ne","","",2,[[["lang",3]]]],[11,"eq","","",3,[[["list",3]]]],[11,"ne","","",3,[[["list",3]]]],[11,"eq","","",5,[[["list",3]]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"from_robj","","",8,[[["robj",4]],["result",4]]],[11,"as_typed_slice","","",9,[[],["option",4]]],[11,"as_typed_slice_mut","","",9,[[],["option",4]]],[11,"sexptype","","",10,[[],["sexptype",6]]],[11,"to_numeric","","",10,[[]]],[11,"to_integer","","",10,[[]]],[11,"to_logical","","",10,[[]]],[11,"to_raw","","",10,[[]]],[11,"to_sexp","","",10,[[],["sexp",6]]],[11,"collect_robj","","Convert a wide range of iterators to Robj.",11,[[],["robj",4]]]],"p":[[3,"Symbol"],[3,"Character"],[3,"Lang"],[3,"List"],[3,"CallMethod"],[4,"Robj"],[3,"ListIter"],[3,"StrIter"],[8,"FromRobj"],[8,"AsTypedSlice"],[8,"ToVectorValue"],[8,"RobjItertools"],[3,"VecIter"],[6,"IntegerIter"],[6,"NumericIter"],[6,"LogicalIter"]]},\
"extendr_engine":{"doc":"A sigleton instance of the R interpreter.","i":[[5,"start_r","extendr_engine","",null,[[]]],[5,"end_r","","Close down the R interpreter. Note you won\'t be able to…",null,[[]]]],"p":[]},\
"extendr_macros":{"doc":"Macros for generating wrappers for rust functions.","i":[[23,"extendr","extendr_macros","Generate bindings for a single function.",null,null],[14,"extendr_module","","Define a module and export symbols to R Example:",null,null]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);